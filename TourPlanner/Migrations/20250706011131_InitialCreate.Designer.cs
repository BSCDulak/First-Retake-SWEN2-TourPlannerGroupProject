// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWEN2_TourPlannerGroupProject.Data;

#nullable disable

namespace SWEN2_TourPlannerGroupProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250706011131_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("SWEN2_TourPlannerGroupProject.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Distance")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("EstimatedTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("FromLatitude")
                        .HasColumnType("REAL");

                    b.Property<double>("FromLongitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RouteImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("RouteInformation")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartLocation")
                        .HasColumnType("TEXT");

                    b.Property<double>("ToLatitude")
                        .HasColumnType("REAL");

                    b.Property<double>("ToLongitude")
                        .HasColumnType("REAL");

                    b.Property<int?>("TourId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransportType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("SWEN2_TourPlannerGroupProject.Models.TourLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AverageSpeed")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Difficulty")
                        .HasColumnType("TEXT");

                    b.Property<string>("Distance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<string>("Report")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TimeSpan")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalDistance")
                        .HasColumnType("REAL");

                    b.Property<string>("TotalTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("TourId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourLogs");
                });

            modelBuilder.Entity("SWEN2_TourPlannerGroupProject.Models.TourLog", b =>
                {
                    b.HasOne("SWEN2_TourPlannerGroupProject.Models.Tour", null)
                        .WithMany("TourLogs")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SWEN2_TourPlannerGroupProject.Models.Tour", b =>
                {
                    b.Navigation("TourLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
